{"version":3,"sources":["actions/actionTypes.js","reducers/posts.js","helper/urls.js","actions/auth.js","actions/posts.js","actions/comment.js","actions/likes.js","components/Comment.js","components/Post.js","components/CreatePost.js","components/PostsList.js","components/SearchResult.js","actions/search.js","components/Search.js","components/Navbar.js","actions/friends.js","components/Friend.js","components/FriendList.js","components/Footer.js","components/Home.js","components/Page404.js","components/Login.js","actions/Sign_up_auth.js","components/SignUp.js","actions/edit_profile.js","components/Settings.js","actions/profile.js","components/Profile.js","actions/conversation.js","components/Message.js","components/Chat.js","components/App.js","actions/socket.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/search.js","reducers/conversation.js","reducers/index.js","reducers/socket.js","index.js","store/index.js"],"names":["UPDATE_POSTS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILED","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILED","AUTHENTICATE_USER","LOG_OUT","CLEAR_AUTH_STATE","EDIT_PROFILE_SUCCESS","EDIT_PROFILE_FAILED","USER_PROFILE_SUCCESS","USER_PROFILE_FAILED","USER_PROFILE_BEGIN","CLEAR_PROFILE_STATE","FETCH_USER_FRIENDS_SUCCESS","FETCH_USER_FRIENDS_FAILED","FETCH_USER_FRIENDS_BEGIN","ADD_FRIEND_FAILED","ADD_FRIEND_SUCCESS","ADD_FRIEND_BEGIN","REMOVE_FRIEND_FAILED","REMOVE_FRIEND_SUCCESS","REMOVE_FRIEND_BEGIN","CLEAR_FRIEND_STATE","ADD_POST_SUCCESS","ADD_POST_FAILED","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILED","TOGGLE_LIKE_SUCCESS","TOGGLE_LIKE_FAILED","FETCH_SEARCH_USERS","CLEAR_SERACH","FETCH_CONVERSATION_SUCCESS","FETCH_CONVERSATION_START","FETCH_CONVERSATION_FAILED","CLEAR_CONVERSATION","ADD_MESSAGE","CONNECT_SOCKET","DISCONNECT_SOCKET","initialPostsState","posts","next","prev","error","ROOT_URL","URLS","fetchposts","page","limit","login","signup","editProfile","fetchProfile","id","fetchFriends","AddFriend","RemoveFriend","createPost","createComment","toggleLike","type","SearchUsers","text","UploadPic","SERVER_URL","get_conversation","fid","url","URL","authorizeuser","data","socket","console","log","dispatch","fetch","method","body","JSON","stringify","email","password","headers","then","response","json","success","localStorage","setItem","token","setTimeout","user","emit","catch","err","logout","clearauthstate","updatePosts","content","getItem","Authorization","status","post","post_id","comment","create_comment_success","deleted","like","likeabletype","toggle_like_success","liketosent","Comment","handleToggleLike","props","_id","isLikedByUser","i","auth","likes","length","liked","this","className","name","onClick","src","Component","connect","state","Post","s","handleChange","e","target","value","setState","handleAddcomment","key","img","avatar","to","onChange","onKeyPress","onk","placeholder","map","CreatePost","post_content","handleSubmit","post_file","PostsList","isLoggedIn","background","desktopSize","mobileSize","textColor","SearchResult","result","searchResults","users","results","Search","handleInputFocus","focus","handleInputBlur","par","document","getElementsByClassName","isDescendant","contains","window","addEventListener","removeEventListener","search","onFocus","Navbar","logOut","removeItem","location","href","friendships","friendship","clear_friend_state","remove_friend_success","removed_id","Friend","friend","online","FriendList","friends","inProgress","signeduser","backColor","from_user","to_user","Footer","handlenextclick","handleprevclick","Home","Page404","Login","handleEmailInput","handlePasswordInput","preventDefault","SubmitError","toast","from","pathname","required","disabled","createuser","confirmpassword","SignUp","handleConfirmPasswordInput","handleNameInput","edit_profile_success","edit_profile_failed","Settings","handleUpload","selectedFile","file","formData","FormData","append","handleFile","files","val","fieldname","handleEdit","editmode","handleBack","fun","handleSave","edit_user_profile","profile_changed","undefined","Profile","handleAddfriend","userId","match","params","handleRemoveFriend","checkIsUserFriend","friendsuserids","push","indexOf","prevProps","prevparam","curparam","isfriend","profileuser","profile","boxColor","style","marginBottom","fetch_conversation","conversation","Message","msg","Chat","handleSend","a","message","msgInput","current","setupconnections","self","socketConnection","on","add_message","React","createRef","msgContainer","scrollIntoView","behavior","off","boxColors","messages","idx","Key","ref","PrivateRoute","PrivateRouteProps","path","component","render","App","mysocket","io","jwt_decode","AuthenticateUser","disconnect","exact","initialAuthState","initialProfileState","initialFriendsState","initialSearchState","initialConversationState","combineReducers","action","newPosts","newLikes","filter","newComments","conv","store","createStore","reducer","applyMiddleware","logger","thunk","getState","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d5f1768.chunk.js","sourcesContent":["export const UPDATE_POSTS = 'UPDATE_POSTS';\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\n\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\r\n\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const CLEAR_AUTH_STATE = 'CLEAR_AUTH_STATE';\r\n\r\nexport const EDIT_PROFILE_SUCCESS = 'EDIT_PROFILE_SUCCESS';\r\nexport const EDIT_PROFILE_FAILED = 'EDIT_PROFILE_FAILED';\r\n\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS';\r\nexport const USER_PROFILE_FAILED = 'USER_PROFILE_FAILED';\r\nexport const USER_PROFILE_BEGIN = 'USER_PROFILE_BEGIN';\r\n\r\nexport const CLEAR_PROFILE_STATE = 'CLEAR_PROFILE_STATE';\r\n\r\nexport const FETCH_USER_FRIENDS_SUCCESS = 'FETCH_USER_FRIENDS_SUCCESS';\r\nexport const FETCH_USER_FRIENDS_FAILED = 'FETCH_USER_FRIENDS_FAILED';\r\nexport const FETCH_USER_FRIENDS_BEGIN = 'FETCH_USER_FRIENDS_BEGIN';\r\n\r\nexport const ADD_FRIEND_FAILED = 'ADD_FRIEND_FAILED';\r\nexport const ADD_FRIEND_SUCCESS = 'ADD_FRIEND_SUCESS';\r\nexport const ADD_FRIEND_BEGIN = 'ADD_FRIEND_BEGIN';\r\n\r\nexport const REMOVE_FRIEND_FAILED = 'REMOVE_FRIEND_FAILED';\r\nexport const REMOVE_FRIEND_SUCCESS = 'REMOVE_FRIEND_SUCESS';\r\nexport const REMOVE_FRIEND_BEGIN = 'REMOVE_FRIEND_BEGIN';\r\n\r\nexport const CLEAR_FRIEND_STATE = 'CLEAR_FRIEND_STATE';\r\n\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILED = 'ADD_POST_FAILED';\r\nexport const ADD_POST_BEGIN = 'ADD_POST_BEGIN';\r\n\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILED = 'ADD_COMMENT_FAILED';\r\n\r\nexport const TOGGLE_LIKE_SUCCESS = 'TOGGLE_LIKE_SUCCESS';\r\nexport const TOGGLE_LIKE_FAILED = 'TOGGLE_LIKE_FAILED';\r\n\r\nexport const FETCH_SEARCH_USERS = 'FETCH_SEARCH_USERS';\r\nexport const CLEAR_SERACH = 'CLEAR_SEARCH';\r\n\r\nexport const FETCH_CONVERSATION_SUCCESS = 'FETCH_CONVERSATION_SUCCESS';\r\nexport const FETCH_CONVERSATION_START = 'FETCH_CONVERSATION_START';\r\nexport const FETCH_CONVERSATION_FAILED = 'FETCH_CONVERSATION_FAILED';\r\nexport const CLEAR_CONVERSATION = 'CLEAR_CONVERSATION';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const CONNECT_SOCKET = 'ADD_SOCKET';\r\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\r\n","import {\r\n  ADD_COMMENT_FAILED,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILED,\r\n  ADD_POST_SUCCESS,\r\n  TOGGLE_LIKE_FAILED,\r\n  TOGGLE_LIKE_SUCCESS,\r\n  UPDATE_POSTS,\r\n} from '../actions/actionTypes';\r\nconst initialPostsState = {\r\n  posts: [],\r\n  next: null,\r\n  prev: null,\r\n  error: null,\r\n};\r\nexport default function posts(state = initialPostsState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_POSTS: {\r\n      return {\r\n        ...state,\r\n        posts: action.posts,\r\n        next: action.next,\r\n        prev: action.prev,\r\n        error: null,\r\n      };\r\n    }\r\n    case ADD_POST_SUCCESS: {\r\n      return {\r\n        posts: [action.post, ...state.posts],\r\n        error: false,\r\n      };\r\n    }\r\n    case ADD_POST_FAILED: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case ADD_COMMENT_SUCCESS: {\r\n      let newPosts = state.posts.map((post) => {\r\n        if (post._id == action.post_id) {\r\n          return {\r\n            ...post,\r\n            comment: [action.comment, ...post.comment],\r\n          };\r\n        }\r\n        return post;\r\n      });\r\n      return {\r\n        ...state,\r\n        posts: newPosts,\r\n        error: null,\r\n      };\r\n    }\r\n    case ADD_COMMENT_FAILED: {\r\n      return {\r\n        error: action.error,\r\n      };\r\n    }\r\n    case TOGGLE_LIKE_SUCCESS: {\r\n      if (action.likeabletype == 'Post') {\r\n        let newPosts = state.posts.map((post) => {\r\n          if (post._id == action.id) {\r\n            if (action.deleted) {\r\n              let newLikes = post.likes.filter(\r\n                (like) => like._id != action.like._id\r\n              );\r\n              return {\r\n                ...post,\r\n                likes: newLikes,\r\n              };\r\n            } else {\r\n              let newLikes = post.likes;\r\n              newLikes.push(action.like);\r\n              return {\r\n                ...post,\r\n                likes: newLikes,\r\n              };\r\n            }\r\n          }\r\n          return post;\r\n        });\r\n        return {\r\n          ...state,\r\n          posts: newPosts,\r\n        };\r\n      } else {\r\n        //Logic ffor comments like\r\n        let newPosts = state.posts.map((post) => {\r\n          let newComments = post.comment.map((comment) => {\r\n            if (comment._id == action.id) {\r\n              if (action.deleted) {\r\n                let newLikes = comment.likes.filter(\r\n                  (like) => like._id != action.like._id\r\n                );\r\n                return {\r\n                  ...comment,\r\n                  likes: newLikes,\r\n                };\r\n              } else {\r\n                let newLikes = comment.likes;\r\n                newLikes.push(action.like);\r\n                return {\r\n                  ...comment,\r\n                  likes: newLikes,\r\n                };\r\n              }\r\n            }\r\n            return comment;\r\n          });\r\n          return {\r\n            ...post,\r\n            comment: newComments,\r\n          };\r\n        });\r\n\r\n        return {\r\n          ...state,\r\n          posts: newPosts,\r\n        };\r\n      }\r\n    }\r\n    case TOGGLE_LIKE_FAILED: {\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","// const ROOT_URL = 'https://powerful-hamlet-85569.herokuapp.com/api';\r\nconst ROOT_URL = 'http://localhost:4000/api';\r\n\r\nconst URLS = {\r\n  fetchposts: (page = 1, limit = 5) =>\r\n    ROOT_URL + `/posts?page=${page}&limit=${limit}`,\r\n  login: () => ROOT_URL + '/users/login',\r\n  signup: () => ROOT_URL + '/users/signup',\r\n  editProfile: () => ROOT_URL + '/users/edit',\r\n  fetchProfile: (id) => ROOT_URL + `/users/${id}`,\r\n  fetchFriends: () => ROOT_URL + '/friendship/fetch_user_friends',\r\n  AddFriend: (id) => ROOT_URL + `/friendship/create_friendship?user_id=${id}`,\r\n  RemoveFriend: (id) =>\r\n    ROOT_URL + `/friendship/remove_friendship?user_id=${id}`,\r\n  createPost: () => ROOT_URL + '/posts/create',\r\n  createComment: () => ROOT_URL + '/comments',\r\n  toggleLike: (id, type) => ROOT_URL + `/likes/toggle?id=${id}&type=${type}`,\r\n  SearchUsers: (text) => ROOT_URL + `/users/search?text=${text}`,\r\n  UploadPic: () => ROOT_URL + `/users/editPhoto/`,\r\n  SERVER_URL: () => 'http://localhost:4000',\r\n  get_conversation: (fid) => ROOT_URL + `/conversation/${fid}`,\r\n};\r\nexport default URLS;\r\n","import {\r\n  LOGIN_FAILED,\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_PROFILE_SUCCESS,\r\n  EDIT_PROFILE_FAILED,\r\n} from './actionTypes';\r\nimport URL from '../helper/urls';\r\n\r\nconst url = URL.login();\r\n\r\nexport function authorizeuser(data, socket) {\r\n  console.log(data);\r\n  return (dispatch) => {\r\n    dispatch(login_start());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          localStorage.setItem('token', data.data.token);\r\n\r\n          setTimeout(() => {\r\n            dispatch(login_success(data.data.user));\r\n            socket.emit('make-user-online', data.data.user);\r\n          }, 1000);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(login_failed(data.error));\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function login_start(data) {\r\n  // console.log(user_info);\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\nexport function login_success(user) {\r\n  // console.log(user_info);\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\nexport function login_failed(error) {\r\n  // console.log('failed due to', error);\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n\r\nexport function AuthenticateUser(user, socket) {\r\n  socket.emit('make-user-online', user);\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n}\r\nexport function clearauthstate() {\r\n  return {\r\n    type: CLEAR_AUTH_STATE,\r\n  };\r\n}\r\n","import { ADD_POST_FAILED, ADD_POST_SUCCESS, UPDATE_POSTS } from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function fetchposts(page = 1) {\r\n  const url = URL.fetchposts(page);\r\n  return (dispatch) => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        let next = data.next;\r\n        let prev = data.prev;\r\n        if (typeof next == 'undefined') {\r\n          next = null;\r\n        }\r\n        if (typeof prev == 'undefined') {\r\n          prev = null;\r\n        }\r\n        dispatch(updatePosts(data.data.posts, next, prev));\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function updatePosts(posts, next, prev) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts: posts,\r\n    next: next,\r\n    prev: prev,\r\n  };\r\n}\r\n\r\nexport function createPost(content) {\r\n  const url = URL.createPost();\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        content: content,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(create_post_success(data.data.post));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(create_post_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function create_post_success(post) {\r\n  return {\r\n    type: ADD_POST_SUCCESS,\r\n    post: post,\r\n  };\r\n}\r\nexport function create_post_failed(error) {\r\n  return {\r\n    type: ADD_POST_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import { ADD_COMMENT_FAILED, ADD_COMMENT_SUCCESS } from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function createComment(content, id) {\r\n  const url = URL.createComment();\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        content: content,\r\n        post_id: id,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(create_comment_success(data.comment, id));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(create_comment_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function create_comment_success(comment, id) {\r\n  return {\r\n    type: ADD_COMMENT_SUCCESS,\r\n    comment: comment,\r\n    post_id: id,\r\n  };\r\n}\r\nexport function create_comment_failed(error) {\r\n  return {\r\n    type: ADD_COMMENT_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import { TOGGLE_LIKE_SUCCESS, TOGGLE_LIKE_FAILED } from './actionTypes';\r\nimport URL from '../helper/urls';\r\n\r\nexport function toggleLike(id, type) {\r\n  const url = URL.toggleLike(id, type);\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(\r\n              toggle_like_success(\r\n                data.data.deleted,\r\n                id,\r\n                type,\r\n                data.data.liketosent\r\n              )\r\n            );\r\n          }, 50);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(toggle_like_failed(data.error));\r\n          }, 50);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function toggle_like_success(deleted, id, type, like) {\r\n  return {\r\n    type: TOGGLE_LIKE_SUCCESS,\r\n    deleted: deleted,\r\n    id: id,\r\n    likeabletype: type,\r\n    like: like,\r\n  };\r\n}\r\nexport function toggle_like_failed(error) {\r\n  return {\r\n    type: TOGGLE_LIKE_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleLike } from '../actions/likes';\r\n\r\nclass Comment extends Component {\r\n  handleToggleLike = () => {\r\n    const { comment } = this.props;\r\n    this.props.dispatch(toggleLike(comment._id, 'Comment'));\r\n  };\r\n  isLikedByUser = () => {\r\n    const { comment } = this.props;\r\n    const { user } = this.props.auth;\r\n    let i;\r\n    for (i = 0; i < comment.likes.length; i++) {\r\n      if (comment.likes[i].user == user._id) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    let liked = this.isLikedByUser();\r\n    const { comment } = this.props;\r\n    return (\r\n      <div className=\"comment\">\r\n        <div className=\"name-time\">{comment.user.name} a minute ago</div>\r\n        <div className=\"comment-content\">{comment.content}</div>\r\n        <div className=\"comment-likes-count\">\r\n          <img\r\n            onClick={this.handleToggleLike}\r\n            src={\r\n              liked\r\n                ? 'https://cdn-icons-png.flaticon.com/512/633/633991.png'\r\n                : 'https://cdn-icons-png.flaticon.com/512/633/633759.png'\r\n            }\r\n          ></img>\r\n          {comment.likes.length}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapToState)(Comment);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createComment } from '../actions/comment';\r\nimport { toggleLike } from '../actions/likes';\r\nimport Comment from './Comment';\r\nimport URLS from '../helper/urls';\r\n\r\nclass Post extends Component {\r\n  constructor(s) {\r\n    super();\r\n    this.state = {\r\n      content: '',\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    let content = e.target.value;\r\n    this.setState({\r\n      content: content,\r\n    });\r\n  };\r\n  handleAddcomment = (e) => {\r\n    const { post } = this.props;\r\n    if (this.state.content !== '' && e.key == 'Enter') {\r\n      this.props.dispatch(createComment(this.state.content, post._id));\r\n      this.setState({\r\n        content: '',\r\n      });\r\n    }\r\n  };\r\n  handleToggleLike = () => {\r\n    const { post } = this.props;\r\n    this.props.dispatch(toggleLike(post._id, 'Post'));\r\n  };\r\n  isLikedByUser = () => {\r\n    const { post } = this.props;\r\n    const { user } = this.props.auth;\r\n    let i;\r\n    for (i = 0; i < post.likes.length; i++) {\r\n      if (post.likes[i].user == user._id) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    const { post } = this.props;\r\n    let liked = this.isLikedByUser();\r\n    const img = URLS.SERVER_URL() + post.user.avatar;\r\n    return (\r\n      <div className=\"Post\">\r\n        <div className=\"user-info\">\r\n          <Link to={`/user/${post.user._id}`}>\r\n            <img\r\n              src={\r\n                post.user.avatar\r\n                  ? img\r\n                  : 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\r\n              }\r\n              className=\"post-icon\"\r\n            ></img>\r\n          </Link>\r\n          <div className=\"post-user-name\">\r\n            {post.user.name}\r\n            <div className=\"time\">a minute ago</div>\r\n          </div>\r\n        </div>\r\n        <p className=\"post-content\">{post.content}</p>\r\n        <div className=\"likes-comment-icon\">\r\n          <img\r\n            onClick={this.handleToggleLike}\r\n            src={\r\n              liked\r\n                ? 'https://cdn-icons-png.flaticon.com/512/1076/1076984.png'\r\n                : 'https://cdn-icons-png.flaticon.com/512/1077/1077035.png'\r\n            }\r\n          ></img>\r\n          <div className=\"likes-count\">{post.likes.length}</div>\r\n          <img src=\"https://cdn-icons-png.flaticon.com/512/1380/1380338.png\"></img>\r\n          <div className=\"comments-count\">{post.comment.length}</div>\r\n        </div>\r\n        <div className=\"comments\">\r\n          <input\r\n            onChange={this.handleChange}\r\n            onKeyPress={this.handleAddcomment}\r\n            onk\r\n            className=\"comments-form\"\r\n            placeholder=\"Type your comment here\"\r\n          ></input>\r\n          {post.comment.map((comment) => (\r\n            <Comment comment={comment} key={comment._id} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapTostate(state) {\r\n  return {\r\n    auth: state.auth,\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapTostate)(Post);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createPost } from '../actions/posts';\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post_content: '',\r\n      post_file: null,\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      post_content: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    let content = this.state.post_content;\r\n    if (content.length != 0) {\r\n      this.props.dispatch(createPost(content));\r\n    }\r\n  };\r\n  render() {\r\n    const { error } = this.props.posts;\r\n    return (\r\n      <div className=\"post-form-container\">\r\n        {error == false && (\r\n          <div className=\"success-dialog\">Post Created Successfully</div>\r\n        )}\r\n        {error && <div className=\"alert-dialog\">{error}</div>}\r\n        <div className=\"post-input-container\">\r\n          <textarea\r\n            onChange={(e) => this.handleChange(e)}\r\n            placeholder=\"What's in your mind?\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"post-btn-container\">\r\n          <div onClick={this.handleSubmit} className=\"post-btn\">\r\n            Add Post\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapToState)(CreatePost);\r\n","import React, { Component } from 'react';\r\nimport Post from './Post';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport CreatePost from './CreatePost';\r\nimport { fetchposts } from '../actions/posts';\r\nimport { BookLoader } from 'react-awesome-loaders';\r\n\r\nclass PostsList extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchposts());\r\n  }\r\n  render() {\r\n    const { posts, error } = this.props.posts;\r\n    const { isLoggedIn } = this.props.auth;\r\n    if (posts.length == 0) {\r\n      return (\r\n        <BookLoader\r\n          text=\"Fetching Posts...\"\r\n          background={'linear-gradient(135deg, #6066FA, #4645F6)'}\r\n          desktopSize={'50px'}\r\n          mobileSize={'50px'}\r\n          textColor={'#4645F6'}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"post-list1\">\r\n        {isLoggedIn && <CreatePost />}\r\n        <div className={isLoggedIn ? 'Post-list' : 'Post-listN'}>\r\n          {posts.map((post) => (\r\n            <Post key={post._id} post={post} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapToState)(PostsList);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport URLS from '../helper/urls';\r\n\r\nclass SearchResult extends Component {\r\n  render() {\r\n    const { result } = this.props;\r\n    const img = URLS.SERVER_URL() + result.avatar;\r\n    return (\r\n      <Link to={`/user/${result._id}`}>\r\n        <div className=\"result\">\r\n          <img\r\n            src={\r\n              result.avatar\r\n                ? img\r\n                : 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\r\n            }\r\n          ></img>\r\n          <div>{result.name}</div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n","import { FETCH_SEARCH_USERS, CLEAR_SERACH } from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function SearchUsers(text) {\r\n  const url = URL.SearchUsers(text);\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        dispatch(updateSearch(data.data.users));\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function updateSearch(searchResults) {\r\n  return {\r\n    type: FETCH_SEARCH_USERS,\r\n    results: searchResults,\r\n  };\r\n}\r\nexport function clearSearch() {\r\n  return {\r\n    type: CLEAR_SERACH,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearSearch, SearchUsers } from '../actions/search';\r\nimport SearchResult from './SearchResult';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      focus: false,\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    let text = e.target.value;\r\n    if (text !== '') {\r\n      this.props.dispatch(SearchUsers(text));\r\n    } else {\r\n      this.props.dispatch(clearSearch());\r\n    }\r\n  };\r\n  handleInputFocus = () => {\r\n    this.setState({ focus: true });\r\n  };\r\n\r\n  handleInputBlur = (e) => {\r\n    const par = document.getElementsByClassName('search');\r\n    if (par.length != 0) {\r\n      const isDescendant = par[0].contains(e.target);\r\n      console.log(isDescendant);\r\n      if (!isDescendant) {\r\n        this.setState({ focus: false });\r\n      }\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('click', (e) => {\r\n      this.handleInputBlur(e);\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', (e) => {\r\n      this.handleInputBlur(e);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { results } = this.props.search;\r\n    const { focus } = this.state;\r\n    return (\r\n      <div className=\"search\" onFocus={this.handleInputFocus}>\r\n        <input onChange={this.handleChange} placeholder=\"Search name\"></input>\r\n        {results.length != 0 && focus != false && (\r\n          <div className=\"search-results\">\r\n            {results.map((result) => {\r\n              return (\r\n                <SearchResult\r\n                  onFocus={this.handleInputFocus}\r\n                  result={result}\r\n                  key={result._id}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    search: state.search,\r\n  };\r\n}\r\nexport default connect(mapToState)(Search);\r\n","import io from 'socket.io-client';\r\nimport React, { Component } from 'react';\r\nimport SearchResult from './SearchResult';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { logout } from '../actions/auth';\r\n\r\nimport Search from './Search';\r\nimport URLS from '../helper/urls';\r\n\r\nclass Navbar extends Component {\r\n  logOut = () => {\r\n    localStorage.removeItem('token');\r\n    this.props.socket.emit('make-user-offline', this.props.auth.user);\r\n    this.props.dispatch(logout());\r\n  };\r\n  render() {\r\n    const { isLoggedIn, user } = this.props.auth;\r\n    const url = window.location.href;\r\n    const img = URLS.SERVER_URL() + user.avatar;\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"nav-left-container\">\r\n          <Link to=\"/\">\r\n            <img\r\n              src=\"https://cdn-icons-png.flaticon.com/512/2111/2111421.png\"\r\n              className=\"logo\"\r\n            ></img>\r\n          </Link>\r\n          <div className=\"site-name\">Socializer</div>\r\n        </div>\r\n        <div className=\"nav-middle-container\">\r\n          <Search />\r\n        </div>\r\n        <div className=\"nav-right-container\">\r\n          {isLoggedIn && (\r\n            <div className=\"user-nav\">\r\n              <Link to=\"/settings\">\r\n                <img\r\n                  src={\r\n                    user.avatar\r\n                      ? img\r\n                      : 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\r\n                  }\r\n                  className=\"user-logo\"\r\n                ></img>\r\n              </Link>\r\n              <div className=\"username-nav\">{user.name}</div>\r\n            </div>\r\n          )}\r\n          {isLoggedIn == false && (\r\n            <Link className=\"nav-btn\" to=\"/login\">\r\n              <div>LogIn</div>\r\n            </Link>\r\n          )}\r\n          {isLoggedIn && (\r\n            <button onClick={this.logOut} className=\"logout-btn\">\r\n              LogOut\r\n            </button>\r\n          )}\r\n          {isLoggedIn == false && (\r\n            <Link className=\"nav-btn\" to=\"/Register\">\r\n              <div>Register</div>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    socket: state.socket,\r\n  };\r\n}\r\nexport default connect(mapToState)(Navbar);\r\n","import {\r\n  FETCH_USER_FRIENDS_BEGIN,\r\n  FETCH_USER_FRIENDS_SUCCESS,\r\n  FETCH_USER_FRIENDS_FAILED,\r\n  ADD_FRIEND_BEGIN,\r\n  ADD_FRIEND_FAILED,\r\n  ADD_FRIEND_SUCCESS,\r\n  REMOVE_FRIEND_BEGIN,\r\n  REMOVE_FRIEND_FAILED,\r\n  REMOVE_FRIEND_SUCCESS,\r\n  UPDATE_POSTS,\r\n  CLEAR_FRIEND_STATE,\r\n} from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function fetchFriends() {\r\n  return (dispatch) => {\r\n    const url = URL.fetchFriends();\r\n    const token = localStorage.getItem('token');\r\n    dispatch(fetch_friends_begin());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'GET',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Data', data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(fetch_friends_success(data.data.friendships));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(fetch_friends_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function fetch_friends_success(friendships) {\r\n  return {\r\n    type: FETCH_USER_FRIENDS_SUCCESS,\r\n    friendships: friendships,\r\n  };\r\n}\r\n\r\nexport function fetch_friends_begin() {\r\n  return {\r\n    type: FETCH_USER_FRIENDS_BEGIN,\r\n  };\r\n}\r\nexport function fetch_friends_failed(error) {\r\n  return {\r\n    type: FETCH_USER_FRIENDS_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n\r\nexport function AddFriend(id) {\r\n  return (dispatch) => {\r\n    const url = URL.AddFriend(id);\r\n    const token = localStorage.getItem('token');\r\n    dispatch(add_friend_begin());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Data', data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(add_friend_success(data.data.friendship));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(add_friend_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function add_friend_success(friendship) {\r\n  return {\r\n    type: ADD_FRIEND_SUCCESS,\r\n    friendship: friendship,\r\n  };\r\n}\r\n\r\nexport function add_friend_begin() {\r\n  return {\r\n    type: ADD_FRIEND_BEGIN,\r\n  };\r\n}\r\nexport function add_friend_failed(error) {\r\n  return {\r\n    type: ADD_FRIEND_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n\r\nexport function clear_friend_state() {\r\n  return {\r\n    type: CLEAR_FRIEND_STATE,\r\n  };\r\n}\r\n\r\nexport function RemoveFriend(id) {\r\n  return (dispatch) => {\r\n    const url = URL.RemoveFriend(id);\r\n    const token = localStorage.getItem('token');\r\n    dispatch(remove_friend_begin());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Data', data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(remove_friend_success(data.removed_id));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(remove_friend_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function remove_friend_success(id) {\r\n  return {\r\n    type: REMOVE_FRIEND_SUCCESS,\r\n    id: id,\r\n  };\r\n}\r\n\r\nexport function remove_friend_begin() {\r\n  return {\r\n    type: REMOVE_FRIEND_BEGIN,\r\n  };\r\n}\r\nexport function remove_friend_failed(error) {\r\n  return {\r\n    type: REMOVE_FRIEND_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport URLS from '../helper/urls';\r\n\r\nclass Friend extends Component {\r\n  render() {\r\n    const { friend } = this.props;\r\n    const { fid } = this.props;\r\n    const img = URLS.SERVER_URL() + friend.avatar;\r\n    return (\r\n      <div className=\"friend\">\r\n        <div className=\"friend-icon\">\r\n          <Link to={`/user/${friend._id}`}>\r\n            <img\r\n              src={\r\n                friend.avatar\r\n                  ? img\r\n                  : 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\r\n              }\r\n            ></img>\r\n          </Link>\r\n        </div>\r\n        <div className=\"friend-name\">\r\n          <div>{friend.name}</div>\r\n        </div>\r\n        <Link to={`/chat/${fid}`}>\r\n          <button className=\"chat-btn\">Chat</button>\r\n        </Link>\r\n        <div className={friend.online ? 'online' : 'offline'}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Friend;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { clear_friend_state, fetchFriends } from '../actions/friends';\r\nimport Friend from './Friend';\r\nimport { WifiLoader } from 'react-awesome-loaders';\r\n\r\nclass FriendList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clear_friend_state());\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchFriends());\r\n  }\r\n  render() {\r\n    const { friendships, inProgress, error } = this.props.friends;\r\n    const signeduser = this.props.auth.user;\r\n    if (inProgress) {\r\n      return (\r\n        <WifiLoader\r\n          className=\"loader\"\r\n          background={'transparent'}\r\n          backColor={'rgb(66, 110, 240)'}\r\n          desktopSize={'90px'}\r\n          mobileSize={'90px'}\r\n          text={'Fetching Friends...'}\r\n          backColor=\"rgb(66, 110, 240)\"\r\n          frontColor=\"#4645F6\"\r\n        />\r\n      );\r\n    }\r\n    if (error) {\r\n      return <h1>{error}</h1>;\r\n    }\r\n    return (\r\n      <div className=\"friends-container\">\r\n        <div className=\"friends-heading\">Friends</div>\r\n        {friendships.map((friendship) => {\r\n          let friend = friendship.from_user;\r\n          if (friend._id == signeduser._id) {\r\n            friend = friendship.to_user;\r\n          }\r\n          return <Friend friend={friend} fid={friendship._id} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    friends: state.friends,\r\n  };\r\n}\r\n\r\nexport default connect(mapToState)(FriendList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchposts } from '../actions/posts';\r\n\r\nclass Footer extends Component {\r\n  handlenextclick = () => {\r\n    const { next } = this.props.posts;\r\n    this.props.dispatch(fetchposts(next.page));\r\n  };\r\n  handleprevclick = () => {\r\n    const { prev } = this.props.posts;\r\n    this.props.dispatch(fetchposts(prev.page));\r\n  };\r\n  render() {\r\n    const { posts } = this.props.posts;\r\n    const { next, prev } = this.props.posts;\r\n\r\n    return (\r\n      <div className=\"Footer-container\">\r\n        <div className=\"footer-btns\">\r\n          <button\r\n            onClick={this.handleprevclick}\r\n            className={prev ? 'fbtn' : 'fbtn hidebtn'}\r\n          >\r\n            Prev\r\n          </button>\r\n          <button\r\n            onClick={this.handlenextclick}\r\n            className={next ? 'fbtn' : 'fbtn hidebtn'}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n        <div className=\"footer\">&copy; 2021 Apoorv Jain</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapTostate(state) {\r\n  return {\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapTostate)(Footer);\r\n","import { func } from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport FriendList from './FriendList';\r\nimport { connect } from 'react-redux';\r\nimport PostsList from './PostsList';\r\nimport { fetchposts } from '../actions/posts';\r\nimport Footer from './Footer';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { isLoggedIn } = this.props.auth;\r\n    return (\r\n      <div className=\"home\">\r\n        <PostsList />\r\n        {isLoggedIn && <FriendList />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapToState)(Home);\r\n","import React from 'react';\r\n\r\nfunction Page404(props) {\r\n  return (\r\n    <div>\r\n      <h1>404: Page not found</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { authorizeuser, clearauthstate } from '../actions/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n  handleEmailInput = (e) => {\r\n    let email = e.target.value;\r\n    this.setState({\r\n      email: email,\r\n    });\r\n  };\r\n  handlePasswordInput = (e) => {\r\n    let password = e.target.value;\r\n    this.setState({\r\n      password: password,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.dispatch(authorizeuser(this.state, this.props.socket));\r\n  };\r\n  SubmitError = (e) => {\r\n    toast.error(e);\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearauthstate());\r\n  }\r\n  componentDidUpdate() {\r\n    const { error, isLoggedIn } = this.props.auth;\r\n    if (error) {\r\n      this.SubmitError(error);\r\n    }\r\n  }\r\n  render() {\r\n    const { error, inProgress, user, isLoggedIn } = this.props.auth;\r\n    const { from } = this.props.location.state || {\r\n      from: { pathname: '/' },\r\n    };\r\n    if (isLoggedIn) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login-heading\">Login</div>\r\n        {/* {error && <div className=\"alert-dialog\">{error}</div>} */}\r\n        <ToastContainer />\r\n        {isLoggedIn && (\r\n          <div className=\"success-dialog\">{`Successfully signed in as ${user.name}`}</div>\r\n        )}\r\n        <form className=\"login-form\">\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n            onChange={this.handleEmailInput}\r\n            // ref={this.emailInputref}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Enter your password\"\r\n            onChange={this.handlePasswordInput}\r\n            // ref={this.passwordInputref}\r\n          ></input>\r\n          {inProgress ? (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-btn\"\r\n              onClick={this.handleSubmit}\r\n              disabled={inProgress}\r\n            >\r\n              Logging In\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-btn\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Log In\r\n            </button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    socket: state.socket,\r\n  };\r\n}\r\nexport default connect(mapToState)(Login);\r\n","import { SIGNUP_FAILED, SIGNUP_START, SIGNUP_SUCCESS } from './actionTypes';\r\nimport URL from '../helper/urls';\r\n\r\nconst url = URL.signup();\r\n\r\nexport function createuser(data) {\r\n  console.log(data);\r\n  return (dispatch) => {\r\n    dispatch(signup_start());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password,\r\n        confirmpassword: data.confirmpassword,\r\n        name: data.name,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            localStorage.setItem('token', data.data.token);\r\n            dispatch(signup_success(data.data.user));\r\n          }, 1000);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(signup_failed(data.error));\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function signup_start() {\r\n  // console.log(user_info);\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\nexport function signup_success(user) {\r\n  // console.log(user_info);\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\nexport function signup_failed(error) {\r\n  // console.log('failed due to', error);\r\n  return {\r\n    type: SIGNUP_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { authorizeuser, clearauthstate } from '../actions/auth';\r\nimport { createuser } from '../actions/Sign_up_auth';\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.emailInputref = React.createRef();\r\n    // this.passwordInputref = React.createRef();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      confirmpassword: '',\r\n      name: '',\r\n    };\r\n  }\r\n  handleEmailInput = (e) => {\r\n    let email = e.target.value;\r\n    this.setState({\r\n      email: email,\r\n    });\r\n  };\r\n  handleConfirmPasswordInput = (e) => {\r\n    let confirmpassword = e.target.value;\r\n    this.setState({\r\n      confirmpassword: confirmpassword,\r\n    });\r\n  };\r\n  handleNameInput = (e) => {\r\n    let name = e.target.value;\r\n    this.setState({\r\n      name: name,\r\n    });\r\n  };\r\n  handlePasswordInput = (e) => {\r\n    let password = e.target.value;\r\n    this.setState({\r\n      password: password,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log('emailref', this.emailInputref);\r\n    // console.log('passwordref', this.passwordInputref);\r\n    this.props.dispatch(createuser(this.state));\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearauthstate());\r\n  }\r\n  render() {\r\n    const { error, inProgress, user, isLoggedIn } = this.props.auth;\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login-heading\">SignUp</div>\r\n        {error && <div className=\"alert-dialog\">{error}</div>}\r\n        {isLoggedIn && (\r\n          <div className=\"success-dialog\">{`Successfully signed in as ${user.user.name}`}</div>\r\n        )}\r\n        <form className=\"login-form\">\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Enter your name\"\r\n            onChange={this.handleNameInput}\r\n            // ref={this.emailInputref}\r\n          ></input>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n            onChange={this.handleEmailInput}\r\n            // ref={this.emailInputref}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Enter your password\"\r\n            onChange={this.handlePasswordInput}\r\n            // ref={this.passwordInputref}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Enter password again\"\r\n            onChange={this.handleConfirmPasswordInput}\r\n            // ref={this.passwordInputref}\r\n          ></input>\r\n          {inProgress ? (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-btn\"\r\n              onClick={this.handleSubmit}\r\n              disabled={inProgress}\r\n            >\r\n              Signing Up\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-btn\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Sign Up\r\n            </button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\n\r\nexport default connect(mapToState)(SignUp);\r\n","import { EDIT_PROFILE_FAILED, EDIT_PROFILE_SUCCESS } from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nlet url = URL.UploadPic();\r\n\r\nexport function UploadPic(id, file) {\r\n  let url = URL.UploadPic();\r\n  console.log(url);\r\n  console.log(file);\r\n  console.log(id);\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    // Update the formData object\r\n    formData.append('avatar', file);\r\n\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n      // Adding body or contents to send\r\n      body: formData,\r\n      // Adding headers to the request\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          localStorage.setItem('token', data.data.token);\r\n          setTimeout(() => {\r\n            dispatch(edit_profile_success(data.data.user));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(edit_profile_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function edit_user_profile(name, password, confirmpassword, id) {\r\n  console.log(id);\r\n  let url = URL.editProfile();\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        name: name,\r\n        password: password,\r\n        confirmpassword: confirmpassword,\r\n        id: '' + id,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          localStorage.setItem('token', data.data.token);\r\n          setTimeout(() => {\r\n            dispatch(edit_profile_success(data.data.user));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(edit_profile_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function edit_profile_success(user) {\r\n  return {\r\n    type: EDIT_PROFILE_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function edit_profile_failed(error) {\r\n  return {\r\n    type: EDIT_PROFILE_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { clearauthstate } from '../actions/auth';\r\nimport {\r\n  edit_profile_failed,\r\n  edit_user_profile,\r\n  UploadPic,\r\n} from '../actions/edit_profile';\r\nimport URLS from '../helper/urls';\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editmode: false,\r\n      name: props.auth.user.name,\r\n      password: '',\r\n      confirmpassword: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n  handleUpload = () => {\r\n    const { user } = this.props.auth;\r\n    if (this.state.selectedFile) {\r\n      this.props.dispatch(UploadPic(user._id, this.state.selectedFile));\r\n    }\r\n  };\r\n\r\n  handleFile = (e) => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({ selectedFile: e.target.files[0] });\r\n  };\r\n  handleChange = (val, fieldname) => {\r\n    this.setState({\r\n      [fieldname]: val,\r\n    });\r\n  };\r\n  handleEdit = () => {\r\n    this.setState({\r\n      editmode: true,\r\n    });\r\n  };\r\n  handleBack = () => {\r\n    this.setState({\r\n      editmode: false,\r\n    });\r\n  };\r\n  fun = () => {\r\n    const { error } = this.props.auth;\r\n    if (error == false) {\r\n      this.setState({\r\n        editmode: false,\r\n      });\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    const { name, password, confirmpassword } = this.state;\r\n    if (\r\n      name.length == 0 ||\r\n      password.length == 0 ||\r\n      confirmpassword != password\r\n    ) {\r\n      this.props.dispatch(edit_profile_failed('Invalid Input'));\r\n    } else {\r\n      const id = this.props.auth.user._id;\r\n      console.log('Success', id);\r\n      this.props.dispatch(\r\n        edit_user_profile(name, password, confirmpassword, id)\r\n      );\r\n      setTimeout(this.fun, 1000);\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearauthstate());\r\n  }\r\n  render() {\r\n    const { editmode } = this.state;\r\n    const { user, error, profile_changed } = this.props.auth;\r\n    const img = URLS.SERVER_URL() + user.avatar;\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <div className=\"user-icon\">\r\n          <img\r\n            src={\r\n              user.avatar !== undefined\r\n                ? img\r\n                : 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\r\n            }\r\n          ></img>\r\n        </div>\r\n        <div className=\"setting-container\">\r\n          {error && <div className=\"alert-dialog\">{error}</div>}\r\n          {error == false && editmode == true && (\r\n            <div className=\"success-dialog\">Successfully Updated</div>\r\n          )}\r\n          <div className=\"show-field2\">\r\n            <input\r\n              className=\"show-field-input2\"\r\n              type=\"file\"\r\n              onChange={this.handleFile}\r\n            ></input>\r\n            <button className=\"upload-btn\" onClick={this.handleUpload}>\r\n              Upload\r\n            </button>\r\n          </div>\r\n          <div className=\"show-field\">\r\n            <div className=\"show-field-heading\">Email</div>\r\n            <div className=\"show-field-input\">{user.email}</div>\r\n          </div>\r\n          {editmode == false && (\r\n            <div className=\"show-field\">\r\n              <div className=\"show-field-heading\">Name</div>\r\n              <div className=\"show-field-input\">{user.name}</div>\r\n            </div>\r\n          )}\r\n          {editmode && (\r\n            <div className=\"show-input\">\r\n              <div className=\"show-field-heading\">Name</div>\r\n              <input\r\n                value={this.state.name}\r\n                onChange={(e) => {\r\n                  this.handleChange(e.target.value, 'name');\r\n                }}\r\n              ></input>\r\n            </div>\r\n          )}\r\n          {editmode && (\r\n            <div className=\"show-input\">\r\n              <div className=\"show-field-heading\">New Password</div>\r\n              <input\r\n                onChange={(e) => {\r\n                  this.handleChange(e.target.value, 'password');\r\n                }}\r\n              ></input>\r\n            </div>\r\n          )}\r\n          {editmode && (\r\n            <div className=\"show-input\">\r\n              <div className=\"show-field-heading\">Confirm Password</div>\r\n              <input\r\n                onChange={(e) => {\r\n                  this.handleChange(e.target.value, 'confirmpassword');\r\n                }}\r\n              ></input>\r\n            </div>\r\n          )}\r\n          <div className=\"Button-container\">\r\n            {editmode == false && (\r\n              <button className=\"setting-btn\" onClick={this.handleEdit}>\r\n                Edit Profile\r\n              </button>\r\n            )}\r\n            {editmode && (\r\n              <button className=\"setting-btn\" onClick={this.handleSave}>\r\n                Save Profile\r\n              </button>\r\n            )}\r\n            {editmode && (\r\n              <button className=\"setting-btn\" onClick={this.handleBack}>\r\n                Go Back\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapToState)(Settings);\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILED,\r\n  USER_PROFILE_BEGIN,\r\n} from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function fetchProfile(id) {\r\n  return (dispatch) => {\r\n    const url = URL.fetchProfile(id);\r\n    dispatch(user_profile_begin());\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'GET',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(user_profile_success(data.data.user));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(user_profile_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function user_profile_begin() {\r\n  return {\r\n    type: USER_PROFILE_BEGIN,\r\n  };\r\n}\r\n\r\nexport function user_profile_success(user) {\r\n  return {\r\n    type: USER_PROFILE_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function user_profile_failed(error) {\r\n  return {\r\n    type: USER_PROFILE_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchProfile } from '../actions/profile';\r\nimport { BoxesLoader } from 'react-awesome-loaders';\r\nimport {\r\n  AddFriend,\r\n  clear_friend_state,\r\n  RemoveFriend,\r\n} from '../actions/friends';\r\nimport { UploadPic } from '../actions/edit_profile';\r\nimport URLS from '../helper/urls';\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleAddfriend = () => {\r\n    const userId = this.props.match.params.userId;\r\n    this.props.dispatch(AddFriend(userId));\r\n  };\r\n  handleRemoveFriend = () => {\r\n    const userId = this.props.match.params.userId;\r\n    this.props.dispatch(RemoveFriend(userId));\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.userId) {\r\n      this.props.dispatch(fetchProfile(this.props.match.params.userId));\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const prevparam = prevProps.match.params;\r\n    const curparam = this.props.match.params;\r\n    if (curparam && prevparam && curparam.userId !== prevparam.userId) {\r\n      this.props.dispatch(fetchProfile(curparam.userId));\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clear_friend_state());\r\n  }\r\n  checkIsUserFriend = () => {\r\n    const userId = this.props.match.params.userId;\r\n    const { user } = this.props.auth;\r\n    const { friendships } = this.props.friends;\r\n    let friendsuserids = [];\r\n    friendships.map((friendship) => {\r\n      let fid = friendship.from_user._id;\r\n      if (fid == user._id) {\r\n        fid = friendship.to_user._id;\r\n      }\r\n      friendsuserids.push(fid);\r\n    });\r\n    let indx = friendsuserids.indexOf(userId);\r\n    if (indx !== -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    let isfriend = this.checkIsUserFriend();\r\n    const profileuser = this.props.profile.user;\r\n    const signeduser = this.props.auth.user;\r\n    // console.log('PROFILE', this.props.location.aboutProps.post.user);\r\n    const { error, inProgress } = this.props.profile;\r\n    // console.log('current', this.state.selectedFile);\r\n    const img = URLS.SERVER_URL() + profileuser.avatar;\r\n    if (signeduser.email == profileuser.email) {\r\n      return <Redirect to=\"/settings\" />;\r\n    }\r\n    if (inProgress) {\r\n      return (\r\n        <div className=\"ploader\">\r\n          <BoxesLoader\r\n            boxColor={'#6366F1'}\r\n            style={{ marginBottom: '20px' }}\r\n            desktopSize={'128px'}\r\n            mobileSize={'80px'}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <h1>{error}</h1>;\r\n    }\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <div className=\"user-icon\">\r\n          <img\r\n            src={\r\n              profileuser.avatar !== undefined\r\n                ? img\r\n                : 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\r\n            }\r\n          ></img>\r\n        </div>\r\n        <div className=\"setting-container\">\r\n          {this.props.friends.error && (\r\n            <div className=\"alert-dialog\">{this.props.friends.error}</div>\r\n          )}\r\n          {this.props.friends.error == false && (\r\n            <div className=\"success-dialog\">\r\n              Successfully {isfriend ? 'added' : 'removed'} friend\r\n            </div>\r\n          )}\r\n          <div className=\"show-field\">\r\n            <div className=\"show-field-heading\">Email</div>\r\n            <div className=\"show-field-input\">{profileuser.email}</div>\r\n          </div>\r\n          <div className=\"show-field\">\r\n            <div className=\"show-field-heading\">Name</div>\r\n            <div className=\"show-field-input\">{profileuser.name}</div>\r\n          </div>\r\n          <div className=\"Button-container\">\r\n            {isfriend == false ? (\r\n              <button\r\n                className=\"add-friend-btn\"\r\n                disabled={this.props.friends.inProgress}\r\n                onClick={this.handleAddfriend}\r\n              >\r\n                {this.props.friends.inProgress ? 'Adding Friend' : 'Add Friend'}\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"add-friend-btn\"\r\n                disabled={this.props.friends.inProgress}\r\n                onClick={this.handleRemoveFriend}\r\n              >\r\n                {this.props.friends.inProgress\r\n                  ? 'Removing Friend'\r\n                  : 'Remove Friend'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n    friends: state.friends,\r\n  };\r\n}\r\nexport default connect(mapToState)(Profile);\r\n","import {\r\n  FETCH_CONVERSATION_SUCCESS,\r\n  FETCH_CONVERSATION_FAILED,\r\n  ADD_MESSAGE,\r\n  FETCH_CONVERSATION_START,\r\n  CLEAR_CONVERSATION,\r\n} from './actionTypes';\r\n\r\nimport { logout } from './auth';\r\nimport URLS from '../helper/urls';\r\n\r\nexport const fetch_conversation = (fid) => {\r\n  return (dispatch) => {\r\n    const url = URLS.get_conversation(fid);\r\n    const token = localStorage.getItem('token');\r\n    dispatch(fetch_conversation_begin());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'GET',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Data', data);\r\n        if (data.success) {\r\n          dispatch(fetch_conversation_success(data.data.conversation));\r\n        } else {\r\n          dispatch(fetch_conversation_failed(data.error));\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n};\r\n\r\nexport function fetch_conversation_success(conversation) {\r\n  return {\r\n    type: FETCH_CONVERSATION_SUCCESS,\r\n    conversation: conversation,\r\n  };\r\n}\r\n\r\nexport function fetch_conversation_begin() {\r\n  return {\r\n    type: FETCH_CONVERSATION_START,\r\n  };\r\n}\r\nexport function fetch_conversation_failed(error) {\r\n  return {\r\n    type: FETCH_CONVERSATION_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n\r\nexport function add_message(message) {\r\n  return {\r\n    type: ADD_MESSAGE,\r\n    message: message,\r\n  };\r\n}\r\n\r\nexport function clear_conversation() {\r\n  return {\r\n    type: CLEAR_CONVERSATION,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Message extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const msg = this.props.msg;\r\n    // console.log(msg);\r\n    const { userId } = this.props;\r\n    return (\r\n      <div\r\n        className={\r\n          userId == msg.user._id ? 'self-msg-outer' : 'other-msg-outer'\r\n        }\r\n      >\r\n        <div className={userId == msg.user._id ? 'self' : 'other'}>\r\n          <div className=\"msgsender\">{msg.user.name}</div>\r\n          <div className=\"msg\">{msg.content}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  add_message,\r\n  clear_conversation,\r\n  fetch_conversation,\r\n} from '../actions/conversation';\r\nimport Message from './Message';\r\nimport { XlviLoader } from 'react-awesome-loaders';\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n    };\r\n    this.socket = props.socket;\r\n    this.msgInput = React.createRef();\r\n    this.msgContainer = React.createRef();\r\n  }\r\n  handleSend = async () => {\r\n    const fid = this.props.match.params.fid;\r\n    console.log('CONVERSATION', fid);\r\n    if (this.state.message.length !== 0) {\r\n      let message = {};\r\n      message.content = this.state.message;\r\n      const { user } = this.props.auth;\r\n      message.user = {\r\n        name: user.name,\r\n        _id: user._id,\r\n        email: user.email,\r\n      };\r\n      this.socket.emit('send-message', message, fid);\r\n      this.msgInput.current.value = '';\r\n      this.setState({\r\n        message: '',\r\n      });\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      message: e.target.value,\r\n    });\r\n  };\r\n  setupconnections = () => {\r\n    const self = this;\r\n    const socketConnection = this.socket;\r\n    const fid = self.props.match.params.fid;\r\n    socketConnection.emit('join_room', fid);\r\n    socketConnection.on('receive-message', (message) => {\r\n      console.log('RECEIVED_DATA', message);\r\n      self.props.dispatch(add_message(message));\r\n    });\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.msgContainer.current)\r\n      this.msgContainer.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n  componentDidMount() {\r\n    // this.socket = this.props.socket;\r\n    const fid = this.props.match.params.fid;\r\n    this.props.dispatch(fetch_conversation(fid));\r\n    console.log('CHAT Mounted');\r\n    this.setupconnections();\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('chat Unmounted');\r\n    this.socket.off();\r\n    this.props.dispatch(clear_conversation());\r\n  }\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    if (!user) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    if (this.props.conversation.inProgress) {\r\n      return (\r\n        <div className=\"loader-box\">\r\n          <XlviLoader\r\n            boxColors={['#EF4444', '#F59E0B', '#6366F1']}\r\n            desktopSize={'128px'}\r\n            mobileSize={'100px'}\r\n            className=\"my-loader\"\r\n            desktopSize={'90px'}\r\n            mobileSize={'90px'}\r\n            text={'Fetching Conversation...'}\r\n            backColor=\"rgb(66, 110, 240)\"\r\n            frontColor=\"#4645F6\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    // console.log('MESSAGE', this.props.conversation.conversation.messages);\r\n    let message = this.props.conversation.conversation.messages;\r\n    if (!message) {\r\n      message = [];\r\n    }\r\n    return (\r\n      <div className=\"mainright\">\r\n        <div className=\"msg-container\">\r\n          {message.map((msg, idx) => {\r\n            return <Message Key={idx} msg={msg} userId={user._id} />;\r\n          })}\r\n          {message.length == 0 && (\r\n            <div className=\"welcome-heading\">\r\n              <h1>{`Welcome to the chat ${user.name}!`}</h1>\r\n              <div>Say Hello to your friend</div>\r\n              <img\r\n                src=\"https://c.tenor.com/4BkYeeOwEUgAAAAC/waving-wave.gif\"\r\n                className=\"wave-img\"\r\n              ></img>\r\n            </div>\r\n          )}\r\n          <div ref={this.msgContainer}></div>\r\n        </div>\r\n        <div className=\"msg-input-container\">\r\n          <input\r\n            className=\"msginput\"\r\n            onChange={this.handleChange}\r\n            ref={this.msgInput}\r\n          ></input>\r\n          <button onClick={this.handleSend} className=\"sendbtn\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    conversation: state.conversation,\r\n    socket: state.socket,\r\n  };\r\n}\r\n\r\nexport default connect(mapToState)(Chat);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport posts from '../reducers/posts';\nimport { fetchposts } from '../actions/posts';\nimport io from 'socket.io-client';\nimport { CONNECT_SOCKET } from '../actions/actionTypes';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport PostsList from './PostsList';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport Page404 from './Page404';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport jwt_decode from 'jwt-decode';\nimport { AuthenticateUser, logout } from '../actions/auth';\nimport Settings from './Settings';\nimport Profile from './Profile';\nimport Footer from './Footer';\nimport Chat from './Chat';\nimport { connect_socket } from '../actions/socket';\nimport { fetchFriends } from '../actions/friends';\n\nconst PrivateRoute = (PrivateRouteProps) => {\n  const { isLoggedIn, path, component: Component } = PrivateRouteProps;\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        console.log('Props', props);\n        return isLoggedIn == true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\nclass App extends Component {\n  constructor() {\n    super();\n  }\n  componentDidMount() {\n    console.log('APP MOUNTED');\n    const token = localStorage.getItem('token');\n    //https://socket-server-101.herokuapp.com\n    const mysocket = io.connect('localhost:8000');\n    this.props.dispatch(connect_socket(mysocket));\n    const { isLoggedIn } = this.props.auth;\n    mysocket.on('user-onlined', () => {\n      if (this.props.auth.isLoggedIn) {\n        this.props.dispatch(fetchFriends());\n      }\n      console.log('USER_ONLINED');\n    });\n    mysocket.on('user-offlined', () => {\n      if (this.props.auth.isLoggedIn) {\n        this.props.dispatch(fetchFriends());\n      }\n      console.log('USER_OFFLINED');\n    });\n    if (token) {\n      const user = jwt_decode(token);\n      this.props.dispatch(AuthenticateUser(user, mysocket));\n    }\n  }\n  componentWillUnmount() {\n    this.props.socket.disconnect();\n    this.props.socket.off();\n  }\n  render() {\n    const { posts, auth } = this.props;\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route\n              exact={true}\n              path=\"/\"\n              render={(props) => {\n                return <Home {...props} />;\n              }}\n            />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/Register\" exact component={SignUp} />\n            <PrivateRoute\n              path=\"/settings\"\n              exact\n              component={Settings}\n              isLoggedIn={auth.isLoggedIn}\n            />\n            <PrivateRoute\n              path=\"/user/:userId\"\n              exact\n              component={Profile}\n              isLoggedIn={auth.isLoggedIn}\n            />\n            <PrivateRoute\n              path=\"/chat/:fid\"\n              exact\n              component={Chat}\n              isLoggedIn={auth.isLoggedIn}\n            />\n            <Route component={Page404} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\n//switch will check for the first matching route and if found than it dont go below it breaks from that route only\nfunction maptostate(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    socket: state.socket,\n  };\n}\n// the below function basically provides the store context value available as props\n//maptostate defines the attributes which are required by the component\nexport default connect(maptostate)(App);\n","import { CONNECT_SOCKET, DISCONNECT_SOCKET } from './actionTypes';\r\n\r\nexport function connect_socket(socket) {\r\n  return {\r\n    type: CONNECT_SOCKET,\r\n    socket: socket,\r\n  };\r\n}\r\n\r\nexport function disconnect_socket() {\r\n  return {\r\n    type: DISCONNECT_SOCKET,\r\n  };\r\n}\r\n","import {\r\n  LOGIN_FAILED,\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  SIGNUP_START,\r\n  SIGNUP_FAILED,\r\n  SIGNUP_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_PROFILE_FAILED,\r\n  EDIT_PROFILE_SUCCESS,\r\n} from '../actions/actionTypes';\r\nconst initialAuthState = {\r\n  user: {},\r\n  error: null,\r\n  isLoggedIn: false,\r\n  inProgress: false,\r\n  profile: '',\r\n};\r\n\r\nexport default function auth(state = initialAuthState, action) {\r\n  console.log('action----->', action);\r\n  switch (action.type) {\r\n    case LOGIN_START: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        inProgress: false,\r\n        error: null,\r\n        user: action.user,\r\n      };\r\n    }\r\n    case LOGIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case SIGNUP_START: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    }\r\n    case SIGNUP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        inProgress: false,\r\n        error: null,\r\n        user: action.user,\r\n      };\r\n    }\r\n    case SIGNUP_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case AUTHENTICATE_USER: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        user: action.user,\r\n        isLoggedIn: true,\r\n      };\r\n    }\r\n    case LOG_OUT: {\r\n      return {\r\n        user: {},\r\n        error: null,\r\n        isLoggedIn: false,\r\n        inProgress: false,\r\n      };\r\n    }\r\n    case CLEAR_AUTH_STATE: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        editmode: false,\r\n      };\r\n    }\r\n    case EDIT_PROFILE_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case EDIT_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        inProgress: false,\r\n        error: false,\r\n        user: action.user,\r\n        editmode: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  CLEAR_PROFILE_STATE,\r\n  USER_PROFILE_BEGIN,\r\n  USER_PROFILE_FAILED,\r\n  USER_PROFILE_SUCCESS,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialProfileState = {\r\n  inProgress: false,\r\n  user: {},\r\n  error: null,\r\n};\r\n\r\nexport default function profile(state = initialProfileState, action) {\r\n  switch (action.type) {\r\n    case USER_PROFILE_BEGIN: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n        error: null,\r\n      };\r\n    }\r\n    case USER_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        user: action.user,\r\n        error: null,\r\n      };\r\n    }\r\n    case USER_PROFILE_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case CLEAR_PROFILE_STATE: {\r\n      return {\r\n        inProgress: false,\r\n        user: {},\r\n        error: null,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ADD_FRIEND_BEGIN,\r\n  ADD_FRIEND_FAILED,\r\n  ADD_FRIEND_SUCCESS,\r\n  CLEAR_FRIEND_STATE,\r\n  FETCH_USER_FRIENDS_BEGIN,\r\n  FETCH_USER_FRIENDS_FAILED,\r\n  FETCH_USER_FRIENDS_SUCCESS,\r\n  REMOVE_FRIEND_SUCCESS,\r\n  REMOVE_FRIEND_FAILED,\r\n  REMOVE_FRIEND_BEGIN,\r\n} from '../actions/actionTypes';\r\nconst initialFriendsState = {\r\n  friendships: [],\r\n  inProgress: false,\r\n  error: null,\r\n};\r\n\r\nexport default function friends(state = initialFriendsState, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_FRIENDS_FAILED: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    }\r\n    case FETCH_USER_FRIENDS_BEGIN: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        inProgress: true,\r\n      };\r\n    }\r\n    case FETCH_USER_FRIENDS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        inProgress: false,\r\n        friendships: action.friendships,\r\n      };\r\n    }\r\n    case ADD_FRIEND_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        inProgress: false,\r\n        friendships: [...state.friendships, action.friendship],\r\n      };\r\n    }\r\n    case ADD_FRIEND_BEGIN: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n        error: null,\r\n      };\r\n    }\r\n    case ADD_FRIEND_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case CLEAR_FRIEND_STATE: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: null,\r\n      };\r\n    }\r\n    case REMOVE_FRIEND_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        inProgress: false,\r\n        friendships: state.friendships.filter(\r\n          (friendship) => friendship._id !== action.id\r\n        ),\r\n      };\r\n    }\r\n    case REMOVE_FRIEND_BEGIN: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n        error: null,\r\n      };\r\n    }\r\n    case REMOVE_FRIEND_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { CLEAR_SERACH, FETCH_SEARCH_USERS } from '../actions/actionTypes';\r\n\r\nconst initialSearchState = {\r\n  results: [],\r\n};\r\n\r\nexport default function search(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_USERS: {\r\n      return {\r\n        ...state,\r\n        results: action.results,\r\n      };\r\n    }\r\n    case CLEAR_SERACH: {\r\n      return {\r\n        results: [],\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ADD_MESSAGE,\r\n  FETCH_CONVERSATION_START,\r\n  FETCH_CONVERSATION_SUCCESS,\r\n  FETCH_CONVERSATION_FAILED,\r\n  CLEAR_CONVERSATION,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialConversationState = {\r\n  conversation: {},\r\n  inProgress: false,\r\n  error: null,\r\n};\r\n\r\nexport default function conversation(state = initialConversationState, action) {\r\n  switch (action.type) {\r\n    case FETCH_CONVERSATION_FAILED: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    }\r\n    case FETCH_CONVERSATION_START: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        inProgress: true,\r\n      };\r\n    }\r\n    case FETCH_CONVERSATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        inProgress: false,\r\n        conversation: action.conversation,\r\n      };\r\n    }\r\n    case CLEAR_CONVERSATION: {\r\n      return initialConversationState;\r\n    }\r\n    case ADD_MESSAGE: {\r\n      let conv = state.conversation;\r\n      conv.messages.push(action.message);\r\n      return {\r\n        ...state,\r\n        conversation: conv,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport posts from './posts';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport friends from './friends';\r\nimport search from './search';\r\nimport socket from './socket';\r\nimport conversation from './conversation';\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  auth,\r\n  profile,\r\n  friends,\r\n  search,\r\n  conversation,\r\n  socket,\r\n});\r\n","import { CONNECT_SOCKET, DISCONNECT_SOCKET } from '../actions/actionTypes';\r\n\r\nconst initialSocketState = null;\r\n\r\nexport default function socket(state = initialSocketState, action) {\r\n  switch (action.type) {\r\n    case CONNECT_SOCKET: {\r\n      return action.socket;\r\n    }\r\n    case DISCONNECT_SOCKET: {\r\n      return null;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport configureStore from './store/index';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers/index';\r\nimport logger from 'redux-logger';\r\n\r\nlet store;\r\n\r\nexport default function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(logger, thunk));\r\n  return store;\r\n}\r\n"],"sourceRoot":""}